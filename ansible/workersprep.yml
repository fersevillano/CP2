- hosts: "master, workers"
  remote_user: ansible
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
     - name: A単adimos transparent masquerading
       shell: |
               sudo modprobe br_netfilter
               sudo firewall-cmd --add-masquerade --permanent
               sudo firewall-cmd --reload

     - name: Creamos el fichero para la conexion de VXLAN
       file:
         path: "/etc/sysctl.d/k8s.conf"
         state: "touch"

     - name: A単adimos la configuracion
       blockinfile:
         path: "/etc/sysctl.d/k8s.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

     - name: Desactivamos las swap y lo borramos del fichero fstab
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

     - name: Configuramos las dependencias de CRI-O
       shell: |
               sudo wget -O /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8_Stream/devel:kubic:libcontainers:stable.repo
               sudo wget -O /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1/CentOS_8_Stream/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo

     - name: Configuramos los modulos
       file:
         path: "/etc/modules-load.d/crio.conf"
         state: "touch"

     - name: A単adimos la configuracion de containerd
       blockinfile:
         path: "/etc/modules-load.d/crio.conf"
         block: |
                overlay
                br_netfilter

     - name: Instalamos CRI-O y lo habilitamos
       shell: |
               sudo dnf install cri-o -y
               sudo systemctl enable crio
               sudo systemctl start crio

     - name: Configuramos el repositorio de kubernetes
       file:
         path: "/etc/yum.repos.d/kubernetes.repo"
         state: "touch"

     - name: A単adimos la configuracion de containerd
       blockinfile:
         path: "/etc/yum.repos.d/kubernetes.repo"
         block: |
                [kubernetes]
                name=Kubernetes
                baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
                enabled=1
                gpgcheck=1
                repo_gpgcheck=1
                gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
                exclude=kubelet kubeadm kubectl

     - name: Instalamos kubernetes y lo habilitamos
       shell: |
               sudo dnf install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
               sudo systemctl enable kubelet
               sudo systemctl start kubelet
